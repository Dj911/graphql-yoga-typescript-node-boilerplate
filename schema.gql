# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

input CreatePostInput {
  author: ID!
  title: String!
}

type Mutation {
  createPost(payload: CreatePostInput!): PostPublishedResponse!
  registerUser(payload: UserRegisterInput!): UserRegisterResponse!
  sharePost(postId: ID!, sharedUser: ID!): PostPublishedResponse!
}

type Post {
  _id: ID!
  createdAt: Timestamp
  currentOwner: ID!
  likes: Float!
  ownerId: ID!
  parentPost: ID
  title: String!
}

"""Post Response"""
type PostPublishedResponse {
  data: Post!
  message: String!
}

type Query {
  getUserById(id: String!): UserRegisterResponse!
  getUsersPostList(userId: String!): UserPostList!
}

"""
The javascript `Date` as integer. Type represents date and time as number of milliseconds from start of UNIX epoch.
"""
scalar Timestamp

"""The `Upload` scalar type represents a file upload."""
scalar Upload

type User {
  _id: ID!
  age: Float
  isActive: Boolean
  lastLogin: Timestamp
  mobileNumber: Float
  name: String
  password: String!
  profile: Upload
  userName: String!
}

"""List of User's Published Posts Response"""
type UserPostList {
  data: [Post!]!
}

input UserProfileUpdate {
  age: Float
  isActive: Boolean
  lastLogin: Timestamp!
  mobileNumber: Float!
  name: String!
}

input UserRegisterInput {
  password: String!
  profile: Upload
  userName: String!
}

"""User Response"""
type UserRegisterResponse {
  data: User!
  message: String!
}
